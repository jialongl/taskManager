add 	[-option ...] "<task_description>"
	-t <deadline>
	-p <priority>
	-g "<group>"
	-c [<number>week][<number>day][<number>hour][<number>min][<number>sec]

edit	[-option ...] <taskNumber>	 
	-d "<task_description>"
	-t <time>
	-p <priority>
	-g "<group>"
	-c [<number>week][<number>day][<number>hour][<number>min][<number>sec]

rm	[-option ...] [<taskNumber1>] [<taskNumber2>] [<taskNumber3>]...
	-g "<group>"

ls	[-option ...] 
	-k <*keyword?>
	-s "[firstKeyWord] [secondKeyWord] [thirdKeyWord]...." // sort
	-f Yes/No/All
	-g "<group>"
	-overdue
	-cflag onlyThis/All/AllFromThis
//to do : auto detect field

task 	<taskNumber> //show specific task

pri	<taskNumber> <priority>

cron // Alias edit -c 

finish	[-option ...] [<taskNumber1>] [<taskNumber2>] [<taskNumber3>]...
	-g "<group>"

export	[-option ...] ["<fileName>"]
	-html	
	-k <keyword>
	-s [firstKeyWord][secondKeyWord][thirdKeyWord].... //sort by	
	-n <taskNumber>		
	-f Yes/No/All
	-g "<group>"

import "<fileName>" 

// to do

read "<fileName>"

set command [-option ...] [-option ...] [-option ...]

lsformat "[field1] [field2] [field3] ..."

//export and import address should be absolute

loadbackup // before import, old tasklist will be autosaved for future load backup. when import, prompt for user confirmation

//io module add a confirmation method for rm and import commands.

// use task like finish and rm , suport sn list & group

// task display group

map <customCommand> <command>

lsnf alias ls -f no
lsf alias ls -f yes 
lsg alias ls -g

// pipe

// up: last command in history , down ,left ,right

// import option 
    -mode append/overwrite/peek

import -mode peek hisToDo.xml | grep -g cs2103 | add

import -overwrite hisToDo.xml
export -g cs2103 temp.xml
loadbackup
import -mode append temp.xml
